#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

source .fonctions	# Loads the generic functions usually used in the script
source /usr/share/yunohost/helpers # Source YunoHost helpers

# See comments in install script
app=$YNH_APP_INSTANCE_NAME

# Retrieve app settings
domain=$(ynh_app_setting_get "$app" domain)
path=$(ynh_app_setting_get "$app" path)
admin=$(ynh_app_setting_get "$app" admin)
language=$(ynh_app_setting_get "$app" language)

CHECK_PATH	# Checks and corrects the syntax of the path.

# Check if admin is not null
if [[ "$admin" = "" || "$language" = "" ]]; then
    echo "Unable to upgrade, please contact support"
    ynh_die
fi

final_path=/opt/$app

db_name=$app

# Modify Nginx configuration file and copy it to Nginx conf directory
sudo sed -i "s@__PATH__@$app@g" ../conf/nginx.conf*
sudo sed -i "s@__FINALPATH__@$final_path/@g" ../conf/nginx.conf*

# Stop Mastodon Services
<<<<<<< HEAD
sudo systemctl stop mastodon-*
=======
sudo systemctl stop mastodon-*.service
>>>>>>> refs/remotes/YunoHost-Apps/master

# Update Mastodon
sudo su - $app <<COMMANDS
pushd ~/live
<<<<<<< HEAD
git pull
bundle install
RAILS_ENV=production bin/bundle exec rails db:migrate
RAILS_ENV=production bin/bundle exec rails assets:precompile
COMMANDS

# Start Mastodon Services
sudo systemctl start mastodon-*

# If app is public, add url to SSOWat conf as skipped_uris
if [ $is_public = "Yes" ];
then
	ynh_app_setting_set "$app" unprotected_uris "/"
	sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf
else
	sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf
fi

=======
git fetch
git pull https://github.com/tootsuite/mastodon.git master
git checkout v1.2
bin/bundle install
yarn install --production
RAILS_ENV=production bundle exec rails assets:clean
RAILS_ENV=production bundle exec rails assets:precompile
RAILS_ENV=production bundle exec rails db:migrate
COMMANDS

>>>>>>> refs/remotes/YunoHost-Apps/master
# Reload Nginx
sudo systemctl reload nginx
# Restart Mastodon
sudo systemctl start mastodon-*.service