# This is a sample configuration file. You can generate your configuration
# with the `rake mastodon:setup` interactive setup wizard, but to customize
# your setup even further, you'll need to edit it manually. This sample does
# not demonstrate all available configuration options. Please look at
# https://docs.joinmastodon.org/admin/config/ for the full documentation.

# Note that this file accepts slightly different syntax depending on whether
# you are using `docker-compose` or not. In particular, if you use
# `docker-compose`, the value of each declared variable will be taken verbatim,
# including surrounding quotes.
# See: https://github.com/mastodon/mastodon/issues/16895

# Federation
# ----------
# This identifies your server and cannot be changed safely later
# ----------
LOCAL_DOMAIN=__DOMAIN__

# Redis
# -----
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_NAMESPACE=__REDIS_NAMESPACE__

# PostgreSQL
# ----------
DB_HOST=localhost
DB_USER=__DB_USER__
DB_NAME=__DB_NAME__
DB_PASS=__DB_PWD__
DB_PORT=5432

# Elasticsearch (optional)
# ------------------------
ES_ENABLED=false
# ES_HOST=localhost
# ES_PORT=9200
# Authentication for ES (optional)
# ES_USER=elastic
# ES_PASS=password

# Secrets
# -------
# Make sure to use `rake secret` to generate secrets
# -------
SECRET_KEY_BASE=__SECRET_KEY_BASE__
OTP_SECRET=__OTP_SECRET__

# Web Push
# --------
# Generate with `rake mastodon:webpush:generate_vapid_key`
# --------
VAPID_PRIVATE_KEY=__VAPID_PRIVATE_KEY__
VAPID_PUBLIC_KEY=__VAPID_PUBLIC_KEY__

# Sending mail
# ------------
SMTP_SERVER=localhost
SMTP_PORT=25
SMTP_LOGIN=__APP__
SMTP_PASSWORD=__MAIL_PWD__
SMTP_FROM_ADDRESS=Mastodon <__APP__@__DOMAIN__>
SMTP_DELIVERY_METHOD=smtp
SMTP_AUTH_METHOD=plain
SMTP_OPENSSL_VERIFY_MODE=none

# Registrations
# ------------
# Single user mode will disable registrations and redirect frontpage to the first profile
# SINGLE_USER_MODE=true
# Prevent registrations with following e-mail domains
# EMAIL_DOMAIN_BLACKLIST=example1.com|example2.de|etc
# Only allow registrations with the following e-mail domains
# EMAIL_DOMAIN_WHITELIST=example1.com|example2.de|etc

# Optionally change default language
DEFAULT_LOCALE=__LANGUAGE__

# File storage (optional)
# -----------------------
S3_ENABLED=__S3_ENABLED__
S3_ENDPOINT=__S3_ENDPOINT__
S3_BUCKET=__S3_BUCKET__
AWS_ACCESS_KEY_ID=__S3_ACCESS_KEY_ID__
AWS_SECRET_ACCESS_KEY=__S3_ACCESS_KEY_SECRET__
S3_ALIAS_HOST=__S3_ALIAS_HOST__
#S3_PERMISSION=
S3_FORCE_SINGLE_REQUEST=true

# IP and session retention
# -----------------------
LDAP_ENABLED=true
LDAP_HOST=localhost
LDAP_PORT=389
LDAP_METHOD=start_tls
LDAP_BASE=ou=users,dc=yunohost,dc=org
LDAP_BIND_DN=uid=local,ou=users,dc=yunohost,dc=org
LDAP_PASSWORD=
LDAP_UID=uid
LDAP_MAIL=mail
LDAP_SEARCH_FILTER=(|(%{uid}=%{email})(%{mail}=%{email}))
LDAP_UID_CONVERSION_ENABLED=true
LDAP_UID_CONVERSION_SEARCH=., -
LDAP_UID_CONVERSION_REPLACE=_
LDAP_TLS_NO_VERIFY=true

# Make sure to modify the scheduling of ip_cleanup_scheduler in config/sidekiq.yml
# to be less than daily if you lower IP_RETENTION_PERIOD below two days (172800).
# -----------------------
IP_RETENTION_PERIOD=1209600
SESSION_RETENTION_PERIOD=1209600
